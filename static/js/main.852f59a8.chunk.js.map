{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPABET","sortByLength","LENGTH","reverse","reset","this","goods","visibleGoods","console","log","getReorderedGoods","sort","first","second","localeCompare","length","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,WAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,WACN,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAjDH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOD,GAMzB,OAFAE,QAAQC,IAAIb,EAAUD,GAEfY,EAsCSG,CAAkBlB,EAAiBa,KAAKX,OActD,OAZIE,IAAaL,EAASS,SACxBM,EAAMK,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MAGhDjB,IAAaL,EAASW,QACxBI,EAAMK,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMG,OAASF,EAAOE,UAGlDpB,GACFW,EAAMH,UAIN,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEpB,IAAaL,EAASS,QAClB,iBACA,0BAENkB,QAASb,KAAKP,mBAPhB,iCAYA,wBACEmB,KAAK,SACLD,UACEpB,IAAaL,EAASW,OAClB,oBACA,6BAENgB,QAASb,KAAKJ,aAPhB,4BAYA,wBACEgB,KAAK,SACLD,UACErB,EACI,oBACA,6BAENuB,QAASb,KAAKF,QAPhB,sBAYGR,GAAcC,IAAaL,EAASM,MAEnC,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASb,KAAKD,MAHhB,sBAUN,6BACE,6BACGE,EAAMa,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAAoBA,kBAjGlC,GAAyBC,aC9CzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.852f59a8.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    if (sortType === SortType.ALPABET) {\n      goods.sort((first, second) => first.localeCompare(second));\n    }\n\n    if (sortType === SortType.LENGTH) {\n      goods.sort((first, second) => first.length - second.length);\n    }\n\n    if (isReversed) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              sortType === SortType.ALPABET\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              sortType === SortType.LENGTH\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              isReversed\n                ? 'button is-warning'\n                : 'button is-warning is-light'\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(!isReversed && sortType === SortType.NONE)\n            || (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map((good) => (\n              <li data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}